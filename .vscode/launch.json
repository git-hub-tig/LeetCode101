{
    // fuck t√áhis  asdf fasdf
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "lldb",
            "request": "launch",
            "name": "simple rust Launch",
            // "program": "${relativeFileDirname}/target/debug/${workspaceFolderBasename}",
            "program": "${workspaceFolder}/target/debug/${workspaceFolderBasename}",
            // "program": "${workspaceFolder}/target/debug/{fileBasenameNoExtension}",
            "args": [],
        "sourceLanguages": ["rust"], // ofr data type visual
            "cwd": "${workspaceFolder}",
            "preLaunchTask": "Rust: cargo build - hello",
        },
    {
        "type": "lldb",
        "request": "launch",
        "name": "not Cargo launch",
        // "cargo": {
        //     "args": [
        //         "build",
        //         "--lib"
        //     ]
        // },
        // "program": "${..}/target/debug/${fileBasenameNoExtension}",
        "program": "${workspaceFolder}/target/debug/${workspaceRootBasename}",
        // {workspaceFolderBasename}" will be rust_cloud
        "cwd":"${workspaceRoot}",
        // "cwd":"${fileDirname}",
        // "cwd":"${workspaceFolder}",
        // "stopAtEntry": false,
        "sourceLanguages": ["rust"], // ofr data type visual
        // "program": "${cargo:program}",
        "args": [],
        "sourceMap":{"/rustc/*": "${env:HOME}/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/"}
    },
        {
            "name": "mac (lldb) c++ Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "${fileDirname}/${fileBasenameNoExtension}",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            // https://code.visualstudio.com/docs/cpp/config-clang-mac
            // https://code.visualstudio.com/docs/cpp/launch-json-reference
            // macOS: When set to true, it will spawn an external console through lldb-mi. When set to false, the output can be seen in VS Code's debugConsole. Due to limitations within lldb-mi, integratedTerminal support is not available.
            // "externalConsole": true,
            "externalConsole": false,
            "MIMode": "lldb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "C/C++: clang++ build active file",
            // "miDebuggerPath": "/usr/bin/lldb-mi"
        },
        {
            "name": "wsl (gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "${fileDirname}/${fileBasenameNoExtension}",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            // "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "C/C++: g++ build active file",
            // "miDebuggerPath": "/usr/bin/lldb-mi"

        },
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
        },
        {
            "name": "go Launch file",
            "type": "go",
            "request": "launch",
            "mode": "debug",
            "program": "${file}"
        },
        {
            "name": "go Launch Package",
            "type": "go",
            "request": "launch",
            "mode": "debug",
            "program": "${workspaceFolder}"
        },
        {
            "name": "wsl clang++ build lldb-mi",
            // "type": "shell",
            "type": "cppdbg",
            "request": "launch",
            "program": "${fileDirname}/${fileBasenameNoExtension}",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            // "externalConsole": true,
            "externalConsole": false,
            "MIMode": "lldb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "C/C++: clang++ build active file",
            "miDebuggerPath": "/usr/bin/lldb-mi"
        }
    ]
}