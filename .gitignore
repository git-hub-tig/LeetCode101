
###########################
# below is c++ exectuable file
###########################*
*
!*.*

!*/

###########################
# below is clion or jetbrain
###########################
*.xml
*.iml
# but launch.json need 


###########################
# below is python
###########################
*.mypy_cache/
*.egg
# the model inference
*.pt 
*.pth
*.onnx
###########################
*.dSYM/
###########################
# below is go
###########################
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib
# Test binary, built with `go test -c`
*.test
# Output of the go coverage tool, specifically when used with LiteIDE
*.out
# Dependency directories (remove the comment below to include it)
vendor/
###########################
# below is c++ wqs
###########################
# Prerequisites
*.d
# Compiled Object files
*.slo
*.lo
*.o
*.obj
# Precompiled Headers
*.gch
*.pch
# Compiled Dynamic libraries
*.so
*.dylib
*.dll
# Fortran module files
*.mod
*.smod
# Compiled Static libraries
*.lai
*.la
*.a
*.lib
# Executables
*.exe
*.out
*.app
##############
###########################
# below is rust
###########################
# Generated by Cargo
# will have compiled files and executables
debug/
target/
# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock
# These are backup files generated by rustfmt
**/*.rs.bk

gtest/

#######################################################
# rust log  file 
*.log

# oreilly/*
cpp_challenge/The-Modern-Cpp-Challenge/
# crtp_template/
# modern_cpp_series_Klaus/
design_pattern/Hands-On-Design-Patterns-with-CPP/
Cpp-High-Performance-Second-Edition/*

Assets*
QuantLib-master/
QuantLib-SWIG-1.27/
QuantLib-1.27.1*
*.zip
*.gz


posix_ciro_cpp-cheat/

#git clone https://github.com/lfreist/hwinfo
hwinfo/hwinfo/ 
